/**
 * find.du
 *
 * Testing the str.find() method
 *
 * .find() returns the index of a substring or -1 if not found
 */
from UnitTest import UnitTest;

class TestStringFind < UnitTest {
    testStringFind() {
        // Exists
        this.assertEquals("hello".find("hello"), 0);
        this.assertEquals("hello".find("l"), 2);
        this.assertEquals("hello".find("l", 2), 3);
        this.assertEquals("Dictu is great! Dictu is great!".find("Dictu"), 0);
    }

    testStringFindSecond() {
        this.assertEquals("Dictu is great! Dictu is great!".find("Dictu", 2), 16);
    }

    testStringFindThird() {
        this.assertEquals("Dictu is great! Dictu is great! Dictu is great!".find("Dictu", 3), 32);
    }
    testStringFindUnicode() {
        this.assertEquals("ðŸ’»ðŸ˜ƒðŸ˜ƒðŸ˜ƒa".find("ðŸ’»"), 0);
        this.assertEquals("ðŸ’»ðŸ˜ƒðŸ˜ƒðŸ˜ƒa".find("ðŸ˜ƒ",2), 2);
        this.assertEquals("ðŸ’»ðŸ˜ƒðŸ˜ƒðŸ˜ƒa".find("ðŸ’»",2), -1);
    }

    testStringFindDoesntExist() {
        this.assertEquals("Dictu is great!".find("hello"), -1);
        this.assertEquals("Dictu is great!".find("l"), -1);
        this.assertEquals("Dictu is great!".find("hello"), -1);
    }

    testStringFindDoesntExistSecond() {
        this.assertEquals("Dictu is great!".find("Dictu", 2), -1);
    }

    testStringFindDoesntExistThird() {
        this.assertEquals("Dictu is great!Dictu is great!".find("Dictu", 3) , -1);
    }
}

TestStringFind().run();